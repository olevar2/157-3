version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: platform3-postgres
    environment:
      POSTGRES_DB: platform3
      POSTGRES_USER: platform3_admin
      POSTGRES_PASSWORD: Platform3Secure2025!
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./infrastructure/database/platform3-init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    restart: unless-stopped
    networks:
      - platform3-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U platform3_admin -d platform3"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: platform3-redis-new
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    ports:
      - "6380:6379"
    restart: unless-stopped
    networks:
      - platform3-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # HashiCorp Vault
  vault:
    image: hashicorp/vault:1.15
    container_name: platform3-vault-new
    environment:
      VAULT_DEV_ROOT_TOKEN_ID: dev-token
      VAULT_DEV_LISTEN_ADDRESS: 0.0.0.0:8200
    ports:
      - "8201:8200"
    restart: unless-stopped
    networks:
      - platform3-network
    healthcheck:
      test: ["CMD", "vault", "status"]
      interval: 10s
      timeout: 5s
      retries: 5
    cap_add:
      - IPC_LOCK

  # Authentication Service
  auth-service:
    build: 
      context: ./services/auth-service
      dockerfile: Dockerfile
    container_name: platform3-auth-service
    environment:
      NODE_ENV: production
      PORT: 3001
      DATABASE_URL: postgresql://platform3_admin:Platform3Secure2025!@postgres:5432/platform3
      REDIS_URL: redis://platform3-redis-new:6379
      JWT_SECRET: super-secret-jwt-key-platform3-2025
      JWT_REFRESH_SECRET: super-secret-refresh-key-platform3-2025
      VAULT_ADDR: http://platform3-vault-new:8200
      VAULT_TOKEN: dev-token
    ports:
      - "3001:3001"
    depends_on:
      - postgres
      - redis
      - vault
    networks:
      - platform3-network
    restart: unless-stopped

  # User Management Service
  user-service:
    build: 
      context: ./services/user-service
      dockerfile: Dockerfile
    container_name: platform3-user-service
    environment:
      NODE_ENV: production
      PORT: 3002
      DATABASE_URL: postgresql://platform3_admin:Platform3Secure2025!@postgres:5432/platform3
      REDIS_URL: redis://platform3-redis-new:6379
      AUTH_SERVICE_URL: http://auth-service:3001
      VAULT_ADDR: http://platform3-vault-new:8200
      VAULT_TOKEN: dev-token
    ports:
      - "3002:3002"
    depends_on:
      - postgres
      - redis
      - auth-service
    networks:
      - platform3-network
    restart: unless-stopped

  # Notification Service
  notification-service:
    build: 
      context: ./services/notification-service
      dockerfile: Dockerfile
    container_name: platform3-notification-service
    environment:
      NODE_ENV: production
      PORT: 3003
      DATABASE_URL: postgresql://platform3_admin:Platform3Secure2025!@postgres:5432/platform3
      REDIS_URL: redis://platform3-redis-new:6379
      AUTH_SERVICE_URL: http://auth-service:3001
      VAULT_ADDR: http://platform3-vault-new:8200
      VAULT_TOKEN: dev-token
    ports:
      - "3003:3003"
    depends_on:
      - postgres
      - redis
      - auth-service
    networks:
      - platform3-network
    restart: unless-stopped

  # API Gateway
  api-gateway:
    build: 
      context: ./services/api-gateway
      dockerfile: Dockerfile
    container_name: platform3-api-gateway
    environment:
      NODE_ENV: production
      PORT: 3000
      REDIS_URL: redis://platform3-redis-new:6379
      AUTH_SERVICE_URL: http://auth-service:3001
      USER_SERVICE_URL: http://user-service:3002
      NOTIFICATION_SERVICE_URL: http://notification-service:3003
      VAULT_ADDR: http://platform3-vault-new:8200
      VAULT_TOKEN: dev-token
    ports:
      - "3000:3000"
    depends_on:
      - auth-service
      - user-service
      - notification-service
    networks:
      - platform3-network
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  platform3-network:
    driver: bridge