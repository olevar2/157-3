# Kafka High-Frequency Trading Configuration
# Optimized for ultra-low latency forex scalping operations
# Supports 1M+ messages per second with <1ms latency

version: '3.8'

services:
  # Zookeeper optimized for trading workloads
  zookeeper-trading:
    image: confluentinc/cp-zookeeper:7.4.0
    container_name: forex-zookeeper-trading
    hostname: zookeeper-trading
    environment:
      # Basic Zookeeper configuration
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_INIT_LIMIT: 5
      ZOOKEEPER_SYNC_LIMIT: 2
      
      # Performance optimizations for trading
      ZOOKEEPER_MAX_CLIENT_CNXNS: 1000
      ZOOKEEPER_SNAP_RETAIN_COUNT: 3
      ZOOKEEPER_PURGE_INTERVAL: 1
      
      # JVM optimizations
      KAFKA_HEAP_OPTS: "-Xmx512M -Xms512M"
      KAFKA_JVM_PERFORMANCE_OPTS: >
        -server
        -XX:+UseG1GC
        -XX:MaxGCPauseMillis=20
        -XX:InitiatingHeapOccupancyPercent=35
        -XX:+ExplicitGCInvokesConcurrent
        -XX:MaxInlineLevel=15
        -Djava.awt.headless=true
        
    volumes:
      - zookeeper_trading_data:/var/lib/zookeeper/data
      - zookeeper_trading_logs:/var/lib/zookeeper/log
      
    ports:
      - "2182:2181"  # Different port to avoid conflicts
      
    networks:
      - kafka-trading-network
      
    restart: unless-stopped
    
    # Resource limits for consistent performance
    deploy:
      resources:
        limits:
          memory: 768M
          cpus: '1.0'
        reservations:
          memory: 512M
          cpus: '0.5'

  # Kafka broker 1 - optimized for scalping
  kafka-broker-1:
    image: confluentinc/cp-kafka:7.4.0
    container_name: forex-kafka-broker-1
    hostname: kafka-broker-1
    depends_on:
      - zookeeper-trading
    environment:
      # Broker identification
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper-trading:2181
      
      # Network configuration for low latency
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:19092,PLAINTEXT_HOST://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-broker-1:19092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      
      # Replication for high availability
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 3
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 2
      KAFKA_DEFAULT_REPLICATION_FACTOR: 3
      KAFKA_MIN_INSYNC_REPLICAS: 2
      
      # Performance optimizations for trading
      KAFKA_NUM_NETWORK_THREADS: 8
      KAFKA_NUM_IO_THREADS: 16
      KAFKA_SOCKET_SEND_BUFFER_BYTES: 102400
      KAFKA_SOCKET_RECEIVE_BUFFER_BYTES: 102400
      KAFKA_SOCKET_REQUEST_MAX_BYTES: 104857600
      
      # Log configuration for high throughput
      KAFKA_NUM_PARTITIONS: 8
      KAFKA_LOG_RETENTION_HOURS: 168  # 7 days
      KAFKA_LOG_RETENTION_BYTES: 1073741824  # 1GB per partition
      KAFKA_LOG_SEGMENT_BYTES: 1073741824
      KAFKA_LOG_RETENTION_CHECK_INTERVAL_MS: 300000
      
      # Compression for efficiency
      KAFKA_COMPRESSION_TYPE: 'lz4'
      KAFKA_LOG_CLEANUP_POLICY: 'delete'
      
      # Performance tuning for scalping
      KAFKA_REPLICA_FETCH_MAX_BYTES: 1048576
      KAFKA_MESSAGE_MAX_BYTES: 1000000
      KAFKA_REPLICA_FETCH_RESPONSE_MAX_BYTES: 10485760
      
      # Producer/Consumer optimizations
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_REPLICA_LAG_TIME_MAX_MS: 10000
      KAFKA_REPLICA_SOCKET_TIMEOUT_MS: 30000
      
      # JVM optimization for low latency
      KAFKA_HEAP_OPTS: "-Xmx2G -Xms2G"
      KAFKA_JVM_PERFORMANCE_OPTS: >
        -server
        -XX:+UseG1GC
        -XX:MaxGCPauseMillis=10
        -XX:InitiatingHeapOccupancyPercent=35
        -XX:+ExplicitGCInvokesConcurrent
        -XX:MaxInlineLevel=15
        -XX:+UseStringDeduplication
        -Djava.awt.headless=true
        
    volumes:
      - kafka_broker_1_data:/var/lib/kafka/data
      
    ports:
      - "9092:9092"
      - "19092:19092"
      
    networks:
      - kafka-trading-network
      
    restart: unless-stopped
    
    deploy:
      resources:
        limits:
          memory: 3G
          cpus: '2.0'
        reservations:
          memory: 2G
          cpus: '1.0'

  # Kafka broker 2 - for redundancy
  kafka-broker-2:
    image: confluentinc/cp-kafka:7.4.0
    container_name: forex-kafka-broker-2
    hostname: kafka-broker-2
    depends_on:
      - zookeeper-trading
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_ZOOKEEPER_CONNECT: zookeeper-trading:2181
      
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:19093,PLAINTEXT_HOST://0.0.0.0:9093
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-broker-2:19093,PLAINTEXT_HOST://localhost:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      
      # Same performance settings as broker 1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 3
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 2
      KAFKA_DEFAULT_REPLICATION_FACTOR: 3
      KAFKA_MIN_INSYNC_REPLICAS: 2
      
      KAFKA_NUM_NETWORK_THREADS: 8
      KAFKA_NUM_IO_THREADS: 16
      KAFKA_SOCKET_SEND_BUFFER_BYTES: 102400
      KAFKA_SOCKET_RECEIVE_BUFFER_BYTES: 102400
      KAFKA_SOCKET_REQUEST_MAX_BYTES: 104857600
      
      KAFKA_NUM_PARTITIONS: 8
      KAFKA_LOG_RETENTION_HOURS: 168
      KAFKA_LOG_RETENTION_BYTES: 1073741824
      KAFKA_LOG_SEGMENT_BYTES: 1073741824
      KAFKA_LOG_RETENTION_CHECK_INTERVAL_MS: 300000
      
      KAFKA_COMPRESSION_TYPE: 'lz4'
      KAFKA_LOG_CLEANUP_POLICY: 'delete'
      
      KAFKA_REPLICA_FETCH_MAX_BYTES: 1048576
      KAFKA_MESSAGE_MAX_BYTES: 1000000
      KAFKA_REPLICA_FETCH_RESPONSE_MAX_BYTES: 10485760
      
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_REPLICA_LAG_TIME_MAX_MS: 10000
      KAFKA_REPLICA_SOCKET_TIMEOUT_MS: 30000
      
      KAFKA_HEAP_OPTS: "-Xmx2G -Xms2G"
      KAFKA_JVM_PERFORMANCE_OPTS: >
        -server
        -XX:+UseG1GC
        -XX:MaxGCPauseMillis=10
        -XX:InitiatingHeapOccupancyPercent=35
        -XX:+ExplicitGCInvokesConcurrent
        -XX:MaxInlineLevel=15
        -XX:+UseStringDeduplication
        -Djava.awt.headless=true
        
    volumes:
      - kafka_broker_2_data:/var/lib/kafka/data
      
    ports:
      - "9093:9093"
      - "19093:19093"
      
    networks:
      - kafka-trading-network
      
    restart: unless-stopped
    
    deploy:
      resources:
        limits:
          memory: 3G
          cpus: '2.0'
        reservations:
          memory: 2G
          cpus: '1.0'

  # Kafka broker 3 - for high availability
  kafka-broker-3:
    image: confluentinc/cp-kafka:7.4.0
    container_name: forex-kafka-broker-3
    hostname: kafka-broker-3
    depends_on:
      - zookeeper-trading
    environment:
      KAFKA_BROKER_ID: 3
      KAFKA_ZOOKEEPER_CONNECT: zookeeper-trading:2181
      
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:19094,PLAINTEXT_HOST://0.0.0.0:9094
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-broker-3:19094,PLAINTEXT_HOST://localhost:9094
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      
      # Same performance settings as other brokers
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 3
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 2
      KAFKA_DEFAULT_REPLICATION_FACTOR: 3
      KAFKA_MIN_INSYNC_REPLICAS: 2
      
      KAFKA_NUM_NETWORK_THREADS: 8
      KAFKA_NUM_IO_THREADS: 16
      KAFKA_SOCKET_SEND_BUFFER_BYTES: 102400
      KAFKA_SOCKET_RECEIVE_BUFFER_BYTES: 102400
      KAFKA_SOCKET_REQUEST_MAX_BYTES: 104857600
      
      KAFKA_NUM_PARTITIONS: 8
      KAFKA_LOG_RETENTION_HOURS: 168
      KAFKA_LOG_RETENTION_BYTES: 1073741824
      KAFKA_LOG_SEGMENT_BYTES: 1073741824
      KAFKA_LOG_RETENTION_CHECK_INTERVAL_MS: 300000
      
      KAFKA_COMPRESSION_TYPE: 'lz4'
      KAFKA_LOG_CLEANUP_POLICY: 'delete'
      
      KAFKA_REPLICA_FETCH_MAX_BYTES: 1048576
      KAFKA_MESSAGE_MAX_BYTES: 1000000
      KAFKA_REPLICA_FETCH_RESPONSE_MAX_BYTES: 10485760
      
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_REPLICA_LAG_TIME_MAX_MS: 10000
      KAFKA_REPLICA_SOCKET_TIMEOUT_MS: 30000
      
      KAFKA_HEAP_OPTS: "-Xmx2G -Xms2G"
      KAFKA_JVM_PERFORMANCE_OPTS: >
        -server
        -XX:+UseG1GC
        -XX:MaxGCPauseMillis=10
        -XX:InitiatingHeapOccupancyPercent=35
        -XX:+ExplicitGCInvokesConcurrent
        -XX:MaxInlineLevel=15
        -XX:+UseStringDeduplication
        -Djava.awt.headless=true
        
    volumes:
      - kafka_broker_3_data:/var/lib/kafka/data
      
    ports:
      - "9094:9094"
      - "19094:19094"
      
    networks:
      - kafka-trading-network
      
    restart: unless-stopped
    
    deploy:
      resources:
        limits:
          memory: 3G
          cpus: '2.0'
        reservations:
          memory: 2G
          cpus: '1.0'

  # Schema Registry for data consistency
  schema-registry:
    image: confluentinc/cp-schema-registry:7.4.0
    container_name: forex-schema-registry
    hostname: schema-registry
    depends_on:
      - kafka-broker-1
      - kafka-broker-2
      - kafka-broker-3
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: 'kafka-broker-1:19092,kafka-broker-2:19093,kafka-broker-3:19094'
      SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:8081
      SCHEMA_REGISTRY_KAFKASTORE_TOPIC_REPLICATION_FACTOR: 3
      SCHEMA_REGISTRY_DEBUG: 'false'
      
    ports:
      - "8081:8081"
      
    networks:
      - kafka-trading-network
      
    restart: unless-stopped

  # Kafka Connect for external integrations
  kafka-connect:
    image: confluentinc/cp-kafka-connect:7.4.0
    container_name: forex-kafka-connect
    hostname: kafka-connect
    depends_on:
      - kafka-broker-1
      - kafka-broker-2
      - kafka-broker-3
      - schema-registry
    environment:
      CONNECT_BOOTSTRAP_SERVERS: 'kafka-broker-1:19092,kafka-broker-2:19093,kafka-broker-3:19094'
      CONNECT_REST_ADVERTISED_HOST_NAME: kafka-connect
      CONNECT_REST_PORT: 8083
      CONNECT_GROUP_ID: trading-connect-cluster
      CONNECT_CONFIG_STORAGE_TOPIC: trading-connect-configs
      CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: 3
      CONNECT_OFFSET_FLUSH_INTERVAL_MS: 10000
      CONNECT_OFFSET_STORAGE_TOPIC: trading-connect-offsets
      CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: 3
      CONNECT_STATUS_STORAGE_TOPIC: trading-connect-status
      CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: 3
      CONNECT_KEY_CONVERTER: org.apache.kafka.connect.storage.StringConverter
      CONNECT_VALUE_CONVERTER: io.confluent.connect.avro.AvroConverter
      CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL: http://schema-registry:8081
      CONNECT_PLUGIN_PATH: "/usr/share/java,/usr/share/confluent-hub-components"
      CONNECT_LOG4J_LOGGERS: org.apache.zookeeper=ERROR,org.I0Itec.zkclient=ERROR,org.reflections=ERROR
      
    ports:
      - "8083:8083"
      
    networks:
      - kafka-trading-network
      
    restart: unless-stopped

  # Kafka Control Center for monitoring
  control-center:
    image: confluentinc/cp-enterprise-control-center:7.4.0
    container_name: forex-control-center
    hostname: control-center
    depends_on:
      - kafka-broker-1
      - kafka-broker-2
      - kafka-broker-3
      - schema-registry
      - kafka-connect
    environment:
      CONTROL_CENTER_BOOTSTRAP_SERVERS: 'kafka-broker-1:19092,kafka-broker-2:19093,kafka-broker-3:19094'
      CONTROL_CENTER_CONNECT_CONNECT-DEFAULT_CLUSTER: 'kafka-connect:8083'
      CONTROL_CENTER_SCHEMA_REGISTRY_URL: "http://schema-registry:8081"
      CONTROL_CENTER_REPLICATION_FACTOR: 3
      CONTROL_CENTER_INTERNAL_TOPICS_PARTITIONS: 1
      CONTROL_CENTER_MONITORING_INTERCEPTOR_TOPIC_PARTITIONS: 1
      CONFLUENT_METRICS_TOPIC_REPLICATION: 3
      PORT: 9021
      
    ports:
      - "9021:9021"
      
    networks:
      - kafka-trading-network
      
    restart: unless-stopped
    
    deploy:
      resources:
        limits:
          memory: 2G
          cpus: '1.0'

volumes:
  zookeeper_trading_data:
    driver: local
  zookeeper_trading_logs:
    driver: local
  kafka_broker_1_data:
    driver: local
  kafka_broker_2_data:
    driver: local
  kafka_broker_3_data:
    driver: local

networks:
  kafka-trading-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.21.0.0/16
