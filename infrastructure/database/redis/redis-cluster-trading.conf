# Redis Cluster Configuration for High-Frequency Forex Trading
# Optimized for sub-millisecond response times in scalping operations
# Supports real-time feature serving and session state management

# ============================================================================
# CLUSTER CONFIGURATION
# ============================================================================

# Cluster enabled
cluster-enabled yes
cluster-config-file nodes-scalping.conf
cluster-node-timeout 5000
cluster-announce-ip 127.0.0.1
cluster-announce-port 7000
cluster-announce-bus-port 17000

# ============================================================================
# PERFORMANCE OPTIMIZATION FOR TRADING
# ============================================================================

# Memory management for high-frequency operations
maxmemory 2gb
maxmemory-policy allkeys-lru
maxmemory-samples 5

# Network optimizations for low latency
tcp-keepalive 300
tcp-backlog 511
timeout 300

# Disable slow operations during trading hours
slow-log-slower-than 1000  # 1ms threshold
slowlog-max-len 128

# ============================================================================
# PERSISTENCE OPTIMIZATION
# ============================================================================

# RDB configuration for trading data
save 900 1      # Save if at least 1 key changed in 900 seconds
save 300 10     # Save if at least 10 keys changed in 300 seconds  
save 60 10000   # Save if at least 10000 keys changed in 60 seconds

# AOF for critical trading operations
appendonly yes
appendfilename "appendonly-scalping.aof"
appendfsync everysec
no-appendfsync-on-rewrite no
auto-aof-rewrite-percentage 100
auto-aof-rewrite-min-size 64mb

# ============================================================================
# TRADING-SPECIFIC CONFIGURATIONS
# ============================================================================

# Enable key expiration notifications for session management
notify-keyspace-events "Ex"

# Lua script cache for trading algorithms
lua-time-limit 5000

# Client connections for trading services
maxclients 10000

# ============================================================================
# SECURITY FOR TRADING ENVIRONMENT
# ============================================================================

# Authentication
requirepass "ScalpingRedis2025!"

# Disable dangerous commands
rename-command FLUSHDB ""
rename-command FLUSHALL ""
rename-command CONFIG "CONFIG_a8b2f3c9d4e5f6g7h8i9j0k1l2m3n4o5"
rename-command DEBUG ""

# ============================================================================
# LOGGING AND MONITORING
# ============================================================================

# Log level for production trading
loglevel notice
logfile "/var/log/redis/redis-scalping.log"

# Enable latency monitoring
latency-monitor-threshold 100

# ============================================================================
# MODULE LOADING FOR TRADING FEATURES
# ============================================================================

# Load RedisJSON for complex trading data structures
# loadmodule /usr/lib/redis/modules/rejson.so

# Load RedisTimeSeries for time-series data
# loadmodule /usr/lib/redis/modules/redistimeseries.so

# Load RedisBloom for probabilistic data structures
# loadmodule /usr/lib/redis/modules/redisbloom.so

# ============================================================================
# MEMORY OPTIMIZATION FOR TRADING DATA
# ============================================================================

# Hash optimization for trading positions
hash-max-ziplist-entries 512
hash-max-ziplist-value 64

# List optimization for order queues
list-max-ziplist-size -2
list-compress-depth 0

# Set optimization for symbol tracking
set-max-intset-entries 512

# Sorted set optimization for price levels
zset-max-ziplist-entries 128
zset-max-ziplist-value 64

# ============================================================================
# CLIENT OUTPUT BUFFER LIMITS
# ============================================================================

# Normal clients (trading applications)
client-output-buffer-limit normal 0 0 0

# Slave clients
client-output-buffer-limit replica 256mb 64mb 60

# Pub/sub clients (real-time feeds)
client-output-buffer-limit pubsub 32mb 8mb 60

# ============================================================================
# ADVANCED TRADING CONFIGURATIONS
# ============================================================================

# Disable swap usage for consistent performance
vm-enabled no

# TCP no delay for low latency
tcp-nodelay yes

# Replication for high availability
# replica-serve-stale-data yes
# replica-read-only yes

# Memory usage reporting
memory-usage-sample-size 5

# ============================================================================
# CLUSTER SPECIFIC SETTINGS
# ============================================================================

# Cluster migration barrier
cluster-migration-barrier 1

# Cluster failure detection
cluster-slave-validity-factor 10

# Cluster require full coverage
cluster-require-full-coverage yes
