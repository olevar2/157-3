# Platform3 Forex Trading Platform - Backup Configuration
# Comprehensive backup and recovery configuration for trading platform

version: "1.0"
platform: "platform3-forex"
last_updated: "2024-12-19"

# =============================================================================
# BACKUP STRATEGY CONFIGURATION
# =============================================================================

backup_strategy:
  # Backup types and schedules
  schedules:
    full_backup:
      frequency: "daily"
      time: "02:00"  # 2 AM UTC
      retention_days: 30
      enabled: true
    
    incremental_backup:
      frequency: "hourly"
      retention_hours: 168  # 7 days
      enabled: true
    
    critical_data_backup:
      frequency: "every_15_minutes"
      retention_hours: 72  # 3 days
      enabled: true
      components: ["postgresql_trading_tables", "redis_sessions"]
    
    weekly_archive:
      frequency: "weekly"
      day: "sunday"
      time: "01:00"
      retention_weeks: 12
      enabled: true

  # Backup locations
  storage:
    primary:
      type: "local"
      path: "/opt/platform3/backups"
      max_size_gb: 500
    
    secondary:
      type: "network"
      path: "/mnt/backup-nas/platform3"
      enabled: false
    
    # Cloud storage integration
    cloud:
      enabled: true
      type: "s3"  # Supported: s3, azure_blob, gcs
      
      # AWS S3 Configuration
      s3:
        bucket: "platform3-backups"
        region: "us-east-1"
        storage_class: "STANDARD_IA"  # Cost-optimized for backups
        encryption: true
        encryption_type: "AES256"  # or "aws:kms"
        access_key_id: "${AWS_ACCESS_KEY_ID}"
        secret_access_key: "${AWS_SECRET_ACCESS_KEY}"
        endpoint_url: ""  # Leave empty for AWS, set for S3-compatible services
        
      # Azure Blob Storage Configuration (alternative)
      azure:
        account_name: "platform3storage"
        container_name: "backups"
        access_tier: "Cool"  # Cost-optimized for backups
        encryption: true
        account_key: "${AZURE_STORAGE_ACCOUNT_KEY}"
        
      # Google Cloud Storage Configuration (alternative)
      gcs:
        bucket: "platform3-backups"
        project_id: "platform3-trading"
        storage_class: "NEARLINE"  # Cost-optimized for backups
        encryption: true
        service_account_key: "${GCS_SERVICE_ACCOUNT_KEY}"
      
      # Cloud backup settings
      sync_settings:
        immediate_upload: true  # Upload critical backups immediately
        batch_upload: false     # Upload in batches for better efficiency
        compression: true       # Compress before upload
        verify_upload: true     # Verify file integrity after upload
        delete_local_after_upload: false  # Keep local copy
        lifecycle_policy: true  # Enable cloud provider lifecycle policies

# =============================================================================
# COMPONENT-SPECIFIC BACKUP SETTINGS
# =============================================================================

components:
  postgresql:
    priority: "critical"
    backup_method: "pg_dump"
    format: "custom"
    compression_level: 6
    parallel_jobs: 4
    
    # Critical tables for trading operations
    critical_tables:
      - "orders"
      - "positions" 
      - "transactions"
      - "accounts"
      - "balances"
      - "margin_calls"
    
    # Tables that can be rebuilt
    non_critical_tables:
      - "audit_logs"
      - "session_logs"
      - "performance_metrics"
    
    # WAL archiving for point-in-time recovery
    wal_archiving:
      enabled: true
      archive_command: "cp %p /opt/platform3/backups/wal/%f"
      max_wal_size: "1GB"
      checkpoint_timeout: "5min"

  redis:
    priority: "high"
    backup_method: "rdb_snapshot"
    
    # Critical keys for trading sessions
    critical_patterns:
      - "trading:session:*"
      - "trading:positions:*"
      - "trading:orders:*"
      - "user:auth:*"
      - "market:cache:*"
    
    # Session data backup
    session_backup:
      enabled: true
      frequency: "every_5_minutes"
      retention_hours: 24

  influxdb:
    priority: "high"
    backup_method: "influx_backup"
    
    # Market data buckets
    buckets:
      - name: "market-data"
        retention: "30d"
        critical: true
      - name: "analytics"
        retention: "7d"
        critical: false
    
    # Time-series specific settings
    time_series:
      max_backup_age: "7d"
      compression: true
      downsampling:
        enabled: true
        rules:
          - from: "1m"
            to: "5m"
            after: "24h"
          - from: "5m"
            to: "1h"
            after: "7d"

  kafka:
    priority: "medium"
    backup_method: "topic_export"
    
    # Critical topics for trading events
    critical_topics:
      - "trading.orders"
      - "trading.executions"
      - "trading.positions"
      - "market.data.realtime"
      - "risk.alerts"
    
    # Topic configurations
    topic_configs:
      retention_hours: 168  # 7 days
      replication_factor: 1
      partitions: 3

  application:
    priority: "medium"
    backup_method: "file_copy"
    
    # Include patterns
    include:
      - "services/*/src/**"
      - "infrastructure/**"
      - "database/init/**"
      - "docker-compose.yml"
      - "*.md"
      - "*.json"
      - "*.yaml"
    
    # Exclude patterns
    exclude:
      - "node_modules/**"
      - "dist/**"
      - "logs/**"
      - "*.log"
      - ".git/**"
      - "*.tmp"

# =============================================================================
# RECOVERY CONFIGURATION
# =============================================================================

recovery:
  # Recovery Time Objectives (RTO) in minutes
  rto_targets:
    postgresql_critical: 5
    redis_sessions: 3
    influxdb_market_data: 10
    application_services: 5
    complete_system: 15

  # Recovery Point Objectives (RPO) in minutes
  rpo_targets:
    trading_transactions: 1
    market_data: 5
    user_sessions: 15
    configuration: 60
    analytics: 240

  # Recovery procedures
  procedures:
    automatic_recovery:
      enabled: true
      max_attempts: 3
      components: ["redis", "application"]
    
    manual_recovery:
      required_for: ["postgresql", "influxdb"]
      notification_required: true
    
    disaster_recovery:
      failover_site: false
      cloud_recovery: false
      manual_intervention: true

# =============================================================================
# MONITORING AND ALERTING
# =============================================================================

monitoring:
  # Health checks
  health_checks:
    backup_completion:
      enabled: true
      timeout_hours: 2
      alert_on_failure: true
    
    data_integrity:
      enabled: true
      checksum_verification: true
      test_restore: false  # Weekly test restore
    
    storage_usage:
      enabled: true
      warning_threshold: 80
      critical_threshold: 90
    
    performance:
      enabled: true
      max_backup_duration_hours: 2
      min_transfer_rate_mbps: 10

  # Alert configuration
  alerts:
    channels:
      email:
        enabled: true
        recipients:
          - "admin@platform3.com"
          - "devops@platform3.com"
        severity_levels: ["warning", "critical", "emergency"]
      
      slack:
        enabled: false
        webhook_url: ""
        channel: "#platform3-alerts"
        severity_levels: ["critical", "emergency"]
      
      sms:
        enabled: false
        provider: "twilio"
        numbers: []
        severity_levels: ["emergency"]

    # Alert thresholds
    thresholds:
      backup_failure_count: 3
      consecutive_failures: 2
      storage_usage_percent: 85
      backup_duration_hours: 2
      data_integrity_failures: 1
      recovery_time_exceeded: true

# =============================================================================
# SECURITY AND COMPLIANCE
# =============================================================================

security:
  # Encryption settings
  encryption:
    at_rest:
      enabled: true
      algorithm: "AES-256"
      key_rotation_days: 90
    
    in_transit:
      enabled: true
      tls_version: "1.3"
      certificate_validation: true
  
  # Access controls
  access_control:
    backup_access:
      role_required: "backup_admin"
      mfa_required: true
    
    recovery_access:
      role_required: "system_admin"
      approval_required: true
      audit_logging: true

  # Compliance requirements
  compliance:
    data_retention:
      financial_records: "7_years"
      trading_logs: "5_years"
      audit_trails: "3_years"
    
    regulatory:
      gdpr_compliance: true
      sox_compliance: false
      pci_compliance: false

# =============================================================================
# PERFORMANCE OPTIMIZATION
# =============================================================================

performance:
  # Compression settings
  compression:
    algorithm: "gzip"
    level: 6
    parallel_compression: true
    
  # Parallel processing
  parallel_jobs:
    postgresql: 4
    file_operations: 8
    network_transfers: 2
  
  # Resource limits
  resource_limits:
    max_memory_gb: 8
    max_cpu_cores: 4
    max_network_mbps: 100
    io_priority: "normal"

  # Optimization strategies
  optimization:
    incremental_backups: true
    deduplication: false
    delta_compression: true
    bandwidth_throttling: false

# =============================================================================
# TESTING AND VALIDATION
# =============================================================================

testing:
  # Backup testing schedule
  test_schedule:
    integrity_checks: "daily"
    restore_tests: "weekly"
    disaster_recovery_drill: "monthly"
    full_system_test: "quarterly"

  # Test environments
  test_environments:
    staging:
      enabled: true
      auto_restore: true
      data_masking: true
    
    development:
      enabled: false
      subset_restore: true
      anonymization: true

  # Validation criteria
  validation:
    data_completeness: true
    referential_integrity: true
    performance_benchmarks: true
    functional_testing: false

# =============================================================================
# MAINTENANCE AND HOUSEKEEPING
# =============================================================================

maintenance:
  # Cleanup policies
  cleanup:
    old_backups:
      enabled: true
      retention_policy: "time_based"
      cleanup_schedule: "daily"
    
    log_files:
      enabled: true
      max_age_days: 30
      max_size_mb: 1000
    
    temporary_files:
      enabled: true
      cleanup_after_hours: 24

  # Maintenance windows
  maintenance_windows:
    daily:
      start_time: "01:00"
      duration_hours: 2
      operations: ["cleanup", "integrity_checks"]
    
    weekly:
      day: "sunday"
      start_time: "00:00"
      duration_hours: 4
      operations: ["full_backup", "restore_test", "optimization"]

# =============================================================================
# DISASTER RECOVERY SCENARIOS
# =============================================================================

disaster_scenarios:
  # Hardware failure
  hardware_failure:
    probability: "medium"
    impact: "high"
    recovery_strategy: "local_restore"
    estimated_rto: "15_minutes"
    
  # Data corruption
  data_corruption:
    probability: "low"
    impact: "critical"
    recovery_strategy: "point_in_time_restore"
    estimated_rto: "30_minutes"
  
  # Site disaster
  site_disaster:
    probability: "very_low"
    impact: "critical"
    recovery_strategy: "offsite_restore"
    estimated_rto: "4_hours"
  
  # Cyber attack
  cyber_attack:
    probability: "medium"
    impact: "critical"
    recovery_strategy: "clean_restore"
    estimated_rto: "2_hours"
