# InfluxDB High-Frequency Trading Setup
# Optimized for M1-M5 scalping strategies with ultra-fast tick data storage
# Supports 1M+ tick data points per second for scalping operations

version: '3.8'

services:
  # InfluxDB Scalping-Optimized Instance
  influxdb-scalping:
    image: influxdb:2.7-alpine
    container_name: forex-influxdb-scalping
    environment:
      # Initialize database for scalping operations
      DOCKER_INFLUXDB_INIT_MODE: setup
      DOCKER_INFLUXDB_INIT_USERNAME: scalping_admin
      DOCKER_INFLUXDB_INIT_PASSWORD: ${INFLUX_SCALPING_PASSWORD:-ScalpingSecure2025!}
      DOCKER_INFLUXDB_INIT_ORG: forex-scalping
      DOCKER_INFLUXDB_INIT_BUCKET: tick-data
      DOCKER_INFLUXDB_INIT_ADMIN_TOKEN: ${INFLUX_ADMIN_TOKEN:-scalping-token-2025}
      
      # High-performance configuration for scalping
      INFLUXD_ENGINE_MAX_SERIES_PER_DATABASE: 1000000
      INFLUXD_ENGINE_MAX_VALUES_PER_TAG: 100000
      INFLUXD_DATA_MAX_CONCURRENT_COMPACTIONS: 4
      INFLUXD_DATA_QUERY_TIMEOUT: 30s
      INFLUXD_DATA_WRITE_TIMEOUT: 10s
      
      # Memory optimization for high-frequency writes
      INFLUXD_DATA_CACHE_MAX_MEMORY_SIZE: 1073741824  # 1GB cache
      INFLUXD_DATA_CACHE_SNAPSHOT_MEMORY_SIZE: 26214400  # 25MB snapshots
      INFLUXD_DATA_CACHE_SNAPSHOT_WRITE_COLD_DURATION: 10m
      
      # WAL (Write-Ahead Log) optimization for scalping
      INFLUXD_DATA_WAL_DIR: /var/lib/influxdb2/wal
      INFLUXD_DATA_WAL_LOGGING_ENABLED: "true"
      INFLUXD_DATA_WAL_READY_SERIES_SIZE: 30720  # 30KB
      INFLUXD_DATA_WAL_COMPACTION_THRESHOLD: 0.5
      INFLUXD_DATA_WAL_MAX_SERIES_SIZE: 1048576  # 1MB
      INFLUXD_DATA_WAL_FLUSH_COLD_INTERVAL: 5s
      
    volumes:
      # Data persistence with SSD optimization
      - influxdb_scalping_data:/var/lib/influxdb2
      - influxdb_scalping_wal:/var/lib/influxdb2/wal
      - ./influxdb-scalping-init.sh:/docker-entrypoint-initdb.d/influxdb-scalping-init.sh
      - ./tick-data-schema.flux:/docker-entrypoint-initdb.d/tick-data-schema.flux
      - ./session-buckets.flux:/docker-entrypoint-initdb.d/session-buckets.flux
      
    ports:
      - "8087:8086"  # Different port to avoid conflicts
      
    restart: unless-stopped
    
    networks:
      - forex-scalping-network
      
    # Health check optimized for high-frequency operations
    healthcheck:
      test: ["CMD", "influx", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
      
    # Resource limits for scalping workload
    deploy:
      resources:
        limits:
          memory: 2G
          cpus: '2.0'
        reservations:
          memory: 1G
          cpus: '1.0'
          
    # Performance optimizations
    ulimits:
      nofile:
        soft: 65536
        hard: 65536
      memlock:
        soft: -1
        hard: -1
        
    # Logging configuration for monitoring
    logging:
      driver: "json-file"
      options:
        max-size: "100m"
        max-file: "3"

  # Telegraf for InfluxDB metrics collection
  telegraf-scalping:
    image: telegraf:1.27-alpine
    container_name: forex-telegraf-scalping
    environment:
      INFLUX_URL: http://influxdb-scalping:8086
      INFLUX_TOKEN: ${INFLUX_ADMIN_TOKEN:-scalping-token-2025}
      INFLUX_ORG: forex-scalping
      INFLUX_BUCKET: system-metrics
    volumes:
      - ./telegraf-scalping.conf:/etc/telegraf/telegraf.conf:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /sys:/rootfs/sys:ro
      - /proc:/rootfs/proc:ro
      - /etc:/rootfs/etc:ro
    depends_on:
      - influxdb-scalping
    networks:
      - forex-scalping-network
    restart: unless-stopped

volumes:
  influxdb_scalping_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${INFLUX_DATA_PATH:-./data/influxdb-scalping}
      
  influxdb_scalping_wal:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${INFLUX_WAL_PATH:-./data/influxdb-scalping-wal}

networks:
  forex-scalping-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
